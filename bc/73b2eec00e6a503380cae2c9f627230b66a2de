---------------------------------------------------------------------------

by ogizanagi at 2015-12-16T21:40:03Z

Perfect ! :sparkles:
I didn't even tried to add documentation about this little feature, because I knew that if it pleased you, you'll be way much more efficient than me at writing it. This proves it :smiley:

---------------------------------------------------------------------------

by Pierstoval at 2015-12-16T21:54:35Z

I'm still :-1: on this :confused:

---------------------------------------------------------------------------

by javiereguiluz at 2015-12-16T21:56:13Z

@Pierstoval are you against the feature, its implementation or both? I know it won't be the most used feature ... but it's useful in some scenarios.

---------------------------------------------------------------------------

by Pierstoval at 2015-12-17T07:38:24Z

@javiereguiluz I'm not against the feature itself, having favicons is important, but I'm against the heavy implementation it implies. I don't think this should be configurable, because as said in #646 , favicons are "not only" a resource and a mime type, there can also be different `rel` properties, and there can be multiple favicons.

Plus, many favicon generators provide proper HTML contents to add to your template, so it's counter-productive to force users to use a Yaml configuration whereas copy/pasting HTML is as simple as saying 'Hello'.

Here's an exemple of what can be generated by some favicon generator:

```html
<link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
<link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
<link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png">
<link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png">
<link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png">
<link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
<link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png">
<link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png">
<link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
<link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/manifest.json">
<meta name="msapplication-TileColor" content="#ffffff">
<meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
<meta name="theme-color" content="#ffffff">
```

Different mime types, but also different tags, some have a `size` attribute, some don't have mime types, etc.

---------------------------------------------------------------------------

by javiereguiluz at 2015-12-17T07:42:49Z

@Pierstoval you are right. But I believe that the favicon code you showed is for public websites, where you have to deal with multiple device nonsenses. In the backend, one favicon is enough.

---------------------------------------------------------------------------

by Pierstoval at 2015-12-17T08:32:36Z

What's the goal of making the backend incredibly well responsive if we can't optimize everything for small devices?
The implementation still looks heavy to me :confused:
